name: CI Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  IMAGE_NAME: dqa-petclinic
  TAG: ${{ github.run_number }}

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '17' ]

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK ${{matrix.java}}
        uses: actions/setup-java@v2
        with:
          java-version: ${{matrix.java}}
          distribution: 'adopt'
          cache: maven
          
      - name: Build with Maven Wrapper
        run: |
          cd petclinic
          mvn -B package

      - name: Store the current repository
        uses: actions/upload-artifact@v3
        with:
          name: repository
          path: |
            petclinic/target
            petclinic/Dockerfile

  delivery:
    needs: build

    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout source code
      uses: 'actions/checkout@v3'

    - name: Restore the repository
      uses: actions/download-artifact@v3
      with:
        name: repository


    # 1. Workload Identity Federation 인증
    - id: 'auth'
      name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        token_format: 'access_token'
        workload_identity_provider: ${{ secrets.CI_PROVIDER_ID }}
        service_account: ${{ secrets.CI_SERVICE_ACCOUNT }}
        audience: 'https://github.com/Taewoogit/spring-petclinic-helm'

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1.1.1

  
    # 2. Docker Auth 인증
    - name: Docker configuration
      run: |-
        echo ${{steps.auth.outputs.access_token}} | docker login -u oauth2accesstoken --password-stdin https://${{ secrets.LOCATION }}-docker.pkg.dev

    # 3. Build the Docker image 
    - name: Build
      run: |-
        docker build \
          --tag "${{ secrets.LOCATION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}" \
          --build-arg GITHUB_SHA="${{ github.sha }}" \
          --build-arg GITHUB_REF="${{ github.ref }}" \
          .

    - name: Push to Artifact Registry
      run: |-
        docker push "${{ secrets.LOCATION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}"
